spring.application.name=mini-market
logging.level.org.springframework=INFO


# Docker Container Section
spring.datasource.url=jdbc:mysql://localhost:3306/mini-market-database
spring.datasource.username=mini-market-admin
spring.datasource.password=dummypassword


# Enable Hibernate SQL Logging
# Enable Hibernate?s SQL logging to see the queries being executed.
# This can reveal if the application is trying to fetch an entity with a null ID.
logging.level.org.hibernate.SQL=DEBUG
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE

# Additional DB Settings
spring.jpa.hibernate.ddl-auto=update
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQLDialect
spring.jpa.show-sql=true


# the command below is used to initialize docker container
#   docker run --detach
#   --env MYSQL_ROOT_PASSWORD=dummypassword        -> Root admin password
#   --env MYSQL_USER=mini-market-admin             -> database credentials
#   --env MYSQL_PASSWORD=dummypassword             -> database credentials
#   --env MYSQL_DATABASE=mini-market-database      -> creating a database named social-media database
#   --name mini-market                             -> docker container name
#   --publish 3306:3306                            -> running port
#   mysql:8-oracle                                 -> This is the type or version of MySQL image

# prompt this in mysqlsh
#   \connect mini-market-admin@localhost:3306
#   then insert password
#   \use mini-market-database
#   then we can run select command or other command
